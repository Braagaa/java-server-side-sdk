/*
 * LoginID Service API
 * # Introduction  <span class=\"subtext\"> Welcome to the LoginID API docs. This documentation will help understand the API calls being made behind our SDKs.  These APIs can be used to manage authentication, users, and user credentials. </span>  # Authentication  <span class=\"subtext\"> There is one main form of authentication for the API: <br/>&bull; API Service Token </span> 
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.loginid.sdk.java.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * Fido2CompleteBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-10T08:30:05.952Z[GMT]")
public class Fido2CompleteBody {
  @SerializedName("client_id")
  private String clientId = null;

  @SerializedName("username")
  private String username = null;

  @SerializedName("attestation_payload")
  private Registerfido2completeAttestationPayload attestationPayload = null;

  @SerializedName("options")
  private Registerfido2completeOptions options = null;

  public Fido2CompleteBody clientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/
  @Schema(example = "MjE4MDA4NTgtMmI0NS0xMWViLWFkYzEtMDI0MmFjMTIwMDAyLg==", description = "")
  public String getClientId() {
    return clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = clientId;
  }

  public Fido2CompleteBody username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @Schema(example = "john.doe", description = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public Fido2CompleteBody attestationPayload(Registerfido2completeAttestationPayload attestationPayload) {
    this.attestationPayload = attestationPayload;
    return this;
  }

   /**
   * Get attestationPayload
   * @return attestationPayload
  **/
  @Schema(description = "")
  public Registerfido2completeAttestationPayload getAttestationPayload() {
    return attestationPayload;
  }

  public void setAttestationPayload(Registerfido2completeAttestationPayload attestationPayload) {
    this.attestationPayload = attestationPayload;
  }

  public Fido2CompleteBody options(Registerfido2completeOptions options) {
    this.options = options;
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @Schema(description = "")
  public Registerfido2completeOptions getOptions() {
    return options;
  }

  public void setOptions(Registerfido2completeOptions options) {
    this.options = options;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Fido2CompleteBody fido2CompleteBody = (Fido2CompleteBody) o;
    return Objects.equals(this.clientId, fido2CompleteBody.clientId) &&
        Objects.equals(this.username, fido2CompleteBody.username) &&
        Objects.equals(this.attestationPayload, fido2CompleteBody.attestationPayload) &&
        Objects.equals(this.options, fido2CompleteBody.options);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientId, username, attestationPayload, options);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Fido2CompleteBody {\n");

    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    attestationPayload: ").append(toIndentedString(attestationPayload)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
