/*
 * LoginID Service API
 * # Introduction  <span class=\"subtext\"> Welcome to the LoginID API docs. This documentation will help understand the API calls being made behind our SDKs.  These APIs can be used to manage authentication, users, and user credentials. </span>  # Authentication  <span class=\"subtext\"> There is one main form of authentication for the API: <br/>&bull; API Service Token </span> 
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.loginid.sdk.java.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * TxCompleteBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-10T08:30:05.952Z[GMT]")
public class TxCompleteBody {
  @SerializedName("tx_id")
  private String txId = null;

  @SerializedName("client_id")
  private String clientId = null;

  @SerializedName("username")
  private String username = null;

  @SerializedName("challenge")
  private String challenge = null;

  @SerializedName("key_handle")
  private String keyHandle = null;

  @SerializedName("client_data")
  private String clientData = null;

  @SerializedName("auth_data")
  private String authData = null;

  @SerializedName("sign_data")
  private String signData = null;

  public TxCompleteBody txId(String txId) {
    this.txId = txId;
    return this;
  }

   /**
   * Get txId
   * @return txId
  **/
  @Schema(example = "5de548f0-caa2-4a5f-93f3-066ae6fc8feb", description = "")
  public String getTxId() {
    return txId;
  }

  public void setTxId(String txId) {
    this.txId = txId;
  }

  public TxCompleteBody clientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/
  @Schema(example = "MjE4MDA4NTgtMmI0NS0xMWViLWFkYzEtMDI0MmFjMTIwMDAyLg==", description = "")
  public String getClientId() {
    return clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = clientId;
  }

  public TxCompleteBody username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @Schema(example = "john.doe", description = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public TxCompleteBody challenge(String challenge) {
    this.challenge = challenge;
    return this;
  }

   /**
   * Get challenge
   * @return challenge
  **/
  @Schema(example = "pO9V4DruYKrXClSwUn9pRIapBfFcl_l0khQd7YwqQRE", description = "")
  public String getChallenge() {
    return challenge;
  }

  public void setChallenge(String challenge) {
    this.challenge = challenge;
  }

  public TxCompleteBody keyHandle(String keyHandle) {
    this.keyHandle = keyHandle;
    return this;
  }

   /**
   * Get keyHandle
   * @return keyHandle
  **/
  @Schema(example = "5dEDbWqk0BAc1lKwFI057rkTHPd7zHBvlDb5pd_HlTw", description = "")
  public String getKeyHandle() {
    return keyHandle;
  }

  public void setKeyHandle(String keyHandle) {
    this.keyHandle = keyHandle;
  }

  public TxCompleteBody clientData(String clientData) {
    this.clientData = clientData;
    return this;
  }

   /**
   * Get clientData
   * @return clientData
  **/
  @Schema(example = "eyJ0eXBlIjoid2ViYXV0aG4uY3JlYXRlIiwiY2hhbGxlbmdlIjoicE85VjREcnVZS3JYQ2x", description = "")
  public String getClientData() {
    return clientData;
  }

  public void setClientData(String clientData) {
    this.clientData = clientData;
  }

  public TxCompleteBody authData(String authData) {
    this.authData = authData;
    return this;
  }

   /**
   * Get authData
   * @return authData
  **/
  @Schema(example = "b7bd9990-2c43-4dce-9286-93cccf81bc62", description = "")
  public String getAuthData() {
    return authData;
  }

  public void setAuthData(String authData) {
    this.authData = authData;
  }

  public TxCompleteBody signData(String signData) {
    this.signData = signData;
    return this;
  }

   /**
   * Get signData
   * @return signData
  **/
  @Schema(example = "x2QYJ3SZVncERjV58EciojIldmblxGiIlRXYlJ3Yu4Ga0VXYiV2diojIlBXe0Jye", description = "")
  public String getSignData() {
    return signData;
  }

  public void setSignData(String signData) {
    this.signData = signData;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TxCompleteBody txCompleteBody = (TxCompleteBody) o;
    return Objects.equals(this.txId, txCompleteBody.txId) &&
        Objects.equals(this.clientId, txCompleteBody.clientId) &&
        Objects.equals(this.username, txCompleteBody.username) &&
        Objects.equals(this.challenge, txCompleteBody.challenge) &&
        Objects.equals(this.keyHandle, txCompleteBody.keyHandle) &&
        Objects.equals(this.clientData, txCompleteBody.clientData) &&
        Objects.equals(this.authData, txCompleteBody.authData) &&
        Objects.equals(this.signData, txCompleteBody.signData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(txId, clientId, username, challenge, keyHandle, clientData, authData, signData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TxCompleteBody {\n");

    sb.append("    txId: ").append(toIndentedString(txId)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    challenge: ").append(toIndentedString(challenge)).append("\n");
    sb.append("    keyHandle: ").append(toIndentedString(keyHandle)).append("\n");
    sb.append("    clientData: ").append(toIndentedString(clientData)).append("\n");
    sb.append("    authData: ").append(toIndentedString(authData)).append("\n");
    sb.append("    signData: ").append(toIndentedString(signData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
