/*
 * LoginID Service API
 * # Introduction  <span class=\"subtext\"> Welcome to the LoginID API docs. This documentation will help understand the API calls being made behind our SDKs.  These APIs can be used to manage authentication, users, and user credentials. </span>  # Authentication  <span class=\"subtext\"> There is one main form of authentication for the API: <br/>&bull; API Service Token </span> 
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.loginid.sdk.java.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * InlineResponse2006
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-10T08:30:05.952Z[GMT]")
public class TxInitResponse {
  @SerializedName("id")
  private String txId = null;

  @SerializedName("assertion_options")
  private InlineResponse2006AssertionOptions assertionOptions = null;

  public TxInitResponse txId(String txId) {
    this.txId = txId;
    return this;
  }

   /**
   * Get txId
   * @return txId
  **/
  @Schema(example = "5de548f0-caa2-4a5f-93f3-066ae6fc8feb", description = "")
  public String getTxId() {
    return txId;
  }

  public void setTxId(String txId) {
    this.txId = txId;
  }

  public TxInitResponse assertionOptions(InlineResponse2006AssertionOptions assertionOptions) {
    this.assertionOptions = assertionOptions;
    return this;
  }

   /**
   * Get assertionOptions
   * @return assertionOptions
  **/
  @Schema(description = "")
  public InlineResponse2006AssertionOptions getAssertionOptions() {
    return assertionOptions;
  }

  public void setAssertionOptions(InlineResponse2006AssertionOptions assertionOptions) {
    this.assertionOptions = assertionOptions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TxInitResponse txInitResponse = (TxInitResponse) o;
    return Objects.equals(this.txId, txInitResponse.txId) &&
        Objects.equals(this.assertionOptions, txInitResponse.assertionOptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(txId, assertionOptions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2006 {\n");

    sb.append("    txId: ").append(toIndentedString(txId)).append("\n");
    sb.append("    assertionOptions: ").append(toIndentedString(assertionOptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
