/*
 * LoginID Service API
 * # Introduction  <span class=\"subtext\"> Welcome to the LoginID API docs. This documentation will help understand the API calls being made behind our SDKs.  These APIs can be used to manage authentication, users, and user credentials. </span>  # Authentication  <span class=\"subtext\"> There is one main form of authentication for the API: <br/>&bull; API Service Token </span> 
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.loginid.sdk.java.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * InitCodeBody
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-10T08:30:05.952Z[GMT]")
public class CredentialsFido2InitCodeBody {
  @SerializedName("client_id")
  private String clientId = null;

  @SerializedName("user_id")
  private String userId = null;

  @SerializedName("authentication_code")
  private Credentialsfido2initcodeAuthenticationCode authenticationCode = null;

  public CredentialsFido2InitCodeBody clientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/
  @Schema(description = "")
  public String getClientId() {
    return clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = clientId;
  }

  public CredentialsFido2InitCodeBody userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @Schema(description = "")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }

  public CredentialsFido2InitCodeBody authenticationCode(Credentialsfido2initcodeAuthenticationCode authenticationCode) {
    this.authenticationCode = authenticationCode;
    return this;
  }

   /**
   * Get authenticationCode
   * @return authenticationCode
  **/
  @Schema(description = "")
  public Credentialsfido2initcodeAuthenticationCode getAuthenticationCode() {
    return authenticationCode;
  }

  public void setAuthenticationCode(Credentialsfido2initcodeAuthenticationCode authenticationCode) {
    this.authenticationCode = authenticationCode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CredentialsFido2InitCodeBody credentialsFido2InitCodeBody = (CredentialsFido2InitCodeBody) o;
    return Objects.equals(this.clientId, credentialsFido2InitCodeBody.clientId) &&
        Objects.equals(this.userId, credentialsFido2InitCodeBody.userId) &&
        Objects.equals(this.authenticationCode, credentialsFido2InitCodeBody.authenticationCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientId, userId, authenticationCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InitCodeBody {\n");

    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    authenticationCode: ").append(toIndentedString(authenticationCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
