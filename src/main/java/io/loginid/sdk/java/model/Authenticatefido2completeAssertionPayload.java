/*
 * LoginID Service API
 * # Introduction  <span class=\"subtext\"> Welcome to the LoginID API docs. This documentation will help understand the API calls being made behind our SDKs.  These APIs can be used to manage authentication, users, and user credentials. </span>  # Authentication  <span class=\"subtext\"> There is one main form of authentication for the API: <br/>&bull; API Service Token </span> 
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.loginid.sdk.java.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * Authenticatefido2completeAssertionPayload
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-10T08:30:05.952Z[GMT]")
public class Authenticatefido2completeAssertionPayload {
  @SerializedName("credential_id")
  private String credentialId = null;

  @SerializedName("challenge")
  private String challenge = null;

  @SerializedName("client_data")
  private String clientData = null;

  @SerializedName("authenticator_data")
  private String authenticatorData = null;

  @SerializedName("signature")
  private String signature = null;

  public Authenticatefido2completeAssertionPayload credentialId(String credentialId) {
    this.credentialId = credentialId;
    return this;
  }

   /**
   * Get credentialId
   * @return credentialId
  **/
  @Schema(example = "5dEDbWqk0BAc1lKwFI057rkTHPd7zHBvlDb5pd_HlTw", description = "")
  public String getCredentialId() {
    return credentialId;
  }

  public void setCredentialId(String credentialId) {
    this.credentialId = credentialId;
  }

  public Authenticatefido2completeAssertionPayload challenge(String challenge) {
    this.challenge = challenge;
    return this;
  }

   /**
   * Get challenge
   * @return challenge
  **/
  @Schema(example = "pO9V4DruYKrXClSwUn9pRIapBfFcl_l0khQd7YwqQRE", description = "")
  public String getChallenge() {
    return challenge;
  }

  public void setChallenge(String challenge) {
    this.challenge = challenge;
  }

  public Authenticatefido2completeAssertionPayload clientData(String clientData) {
    this.clientData = clientData;
    return this;
  }

   /**
   * Get clientData
   * @return clientData
  **/
  @Schema(example = "eyJ0eXBlIjoid2ViYXV0aG4uY3JlYXRlIiwiY2hhbGxlbmdlIjoicE85VjREcnVZS3JYQ2x", description = "")
  public String getClientData() {
    return clientData;
  }

  public void setClientData(String clientData) {
    this.clientData = clientData;
  }

  public Authenticatefido2completeAssertionPayload authenticatorData(String authenticatorData) {
    this.authenticatorData = authenticatorData;
    return this;
  }

   /**
   * Get authenticatorData
   * @return authenticatorData
  **/
  @Schema(example = "b7bd9990-2c43-4dce-9286-93cccf81bc62", description = "")
  public String getAuthenticatorData() {
    return authenticatorData;
  }

  public void setAuthenticatorData(String authenticatorData) {
    this.authenticatorData = authenticatorData;
  }

  public Authenticatefido2completeAssertionPayload signature(String signature) {
    this.signature = signature;
    return this;
  }

   /**
   * Get signature
   * @return signature
  **/
  @Schema(example = "x2QYJ3SZVncERjV58EciojIldmblxGiIlRXYlJ3Yu4Ga0VXYiV2diojIlBXe0Jye", description = "")
  public String getSignature() {
    return signature;
  }

  public void setSignature(String signature) {
    this.signature = signature;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Authenticatefido2completeAssertionPayload authenticatefido2completeAssertionPayload = (Authenticatefido2completeAssertionPayload) o;
    return Objects.equals(this.credentialId, authenticatefido2completeAssertionPayload.credentialId) &&
        Objects.equals(this.challenge, authenticatefido2completeAssertionPayload.challenge) &&
        Objects.equals(this.clientData, authenticatefido2completeAssertionPayload.clientData) &&
        Objects.equals(this.authenticatorData, authenticatefido2completeAssertionPayload.authenticatorData) &&
        Objects.equals(this.signature, authenticatefido2completeAssertionPayload.signature);
  }

  @Override
  public int hashCode() {
    return Objects.hash(credentialId, challenge, clientData, authenticatorData, signature);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Authenticatefido2completeAssertionPayload {\n");

    sb.append("    credentialId: ").append(toIndentedString(credentialId)).append("\n");
    sb.append("    challenge: ").append(toIndentedString(challenge)).append("\n");
    sb.append("    clientData: ").append(toIndentedString(clientData)).append("\n");
    sb.append("    authenticatorData: ").append(toIndentedString(authenticatorData)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
