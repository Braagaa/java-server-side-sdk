/*
 * LoginID Service API
 * # Introduction  <span class=\"subtext\"> Welcome to the LoginID API docs. This documentation will help understand the API calls being made behind our SDKs.  These APIs can be used to manage authentication, users, and user credentials. </span>  # Authentication  <span class=\"subtext\"> There is one main form of authentication for the API: <br/>&bull; API Service Token </span> 
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.loginid.sdk.java.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * InlineResponse2001Payload
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-10T08:30:05.952Z[GMT]")
public class InlineResponse2001Payload {
  @SerializedName("authenticatorSelection")
  private InlineResponse200AttestationPayloadAuthenticatorSelection authenticatorSelection = null;

  @SerializedName("challenge")
  private String challenge = null;

  @SerializedName("excludeCredentials")
  private List<String> excludeCredentials = null;

  @SerializedName("pubKeyCredParams")
  private List<InlineResponse200AttestationPayloadPubKeyCredParams> pubKeyCredParams = null;

  @SerializedName("rp")
  private InlineResponse200AttestationPayloadRp rp = null;

  @SerializedName("session_id")
  private String sessionId = null;

  @SerializedName("uid")
  private String uid = null;

  @SerializedName("user")
  private InlineResponse200AttestationPayloadUser user = null;

  public InlineResponse2001Payload authenticatorSelection(InlineResponse200AttestationPayloadAuthenticatorSelection authenticatorSelection) {
    this.authenticatorSelection = authenticatorSelection;
    return this;
  }

   /**
   * Get authenticatorSelection
   * @return authenticatorSelection
  **/
  @Schema(description = "")
  public InlineResponse200AttestationPayloadAuthenticatorSelection getAuthenticatorSelection() {
    return authenticatorSelection;
  }

  public void setAuthenticatorSelection(InlineResponse200AttestationPayloadAuthenticatorSelection authenticatorSelection) {
    this.authenticatorSelection = authenticatorSelection;
  }

  public InlineResponse2001Payload challenge(String challenge) {
    this.challenge = challenge;
    return this;
  }

   /**
   * Get challenge
   * @return challenge
  **/
  @Schema(example = "pO9V4DruYKrXClSwUn9pRIapBfFcl_l0khQd7YwqQRE", description = "")
  public String getChallenge() {
    return challenge;
  }

  public void setChallenge(String challenge) {
    this.challenge = challenge;
  }

  public InlineResponse2001Payload excludeCredentials(List<String> excludeCredentials) {
    this.excludeCredentials = excludeCredentials;
    return this;
  }

  public InlineResponse2001Payload addExcludeCredentialsItem(String excludeCredentialsItem) {
    if (this.excludeCredentials == null) {
      this.excludeCredentials = new ArrayList<String>();
    }
    this.excludeCredentials.add(excludeCredentialsItem);
    return this;
  }

   /**
   * Get excludeCredentials
   * @return excludeCredentials
  **/
  @Schema(description = "")
  public List<String> getExcludeCredentials() {
    return excludeCredentials;
  }

  public void setExcludeCredentials(List<String> excludeCredentials) {
    this.excludeCredentials = excludeCredentials;
  }

  public InlineResponse2001Payload pubKeyCredParams(List<InlineResponse200AttestationPayloadPubKeyCredParams> pubKeyCredParams) {
    this.pubKeyCredParams = pubKeyCredParams;
    return this;
  }

  public InlineResponse2001Payload addPubKeyCredParamsItem(InlineResponse200AttestationPayloadPubKeyCredParams pubKeyCredParamsItem) {
    if (this.pubKeyCredParams == null) {
      this.pubKeyCredParams = new ArrayList<InlineResponse200AttestationPayloadPubKeyCredParams>();
    }
    this.pubKeyCredParams.add(pubKeyCredParamsItem);
    return this;
  }

   /**
   * Get pubKeyCredParams
   * @return pubKeyCredParams
  **/
  @Schema(description = "")
  public List<InlineResponse200AttestationPayloadPubKeyCredParams> getPubKeyCredParams() {
    return pubKeyCredParams;
  }

  public void setPubKeyCredParams(List<InlineResponse200AttestationPayloadPubKeyCredParams> pubKeyCredParams) {
    this.pubKeyCredParams = pubKeyCredParams;
  }

  public InlineResponse2001Payload rp(InlineResponse200AttestationPayloadRp rp) {
    this.rp = rp;
    return this;
  }

   /**
   * Get rp
   * @return rp
  **/
  @Schema(description = "")
  public InlineResponse200AttestationPayloadRp getRp() {
    return rp;
  }

  public void setRp(InlineResponse200AttestationPayloadRp rp) {
    this.rp = rp;
  }

  public InlineResponse2001Payload sessionId(String sessionId) {
    this.sessionId = sessionId;
    return this;
  }

   /**
   * Get sessionId
   * @return sessionId
  **/
  @Schema(example = "b34877e9-54ac-4c43-8ea8-5b9bd8732980", description = "")
  public String getSessionId() {
    return sessionId;
  }

  public void setSessionId(String sessionId) {
    this.sessionId = sessionId;
  }

  public InlineResponse2001Payload uid(String uid) {
    this.uid = uid;
    return this;
  }

   /**
   * Get uid
   * @return uid
  **/
  @Schema(example = "b7bd9990-2c43-4dce-9286-93cccf81bc62", description = "")
  public String getUid() {
    return uid;
  }

  public void setUid(String uid) {
    this.uid = uid;
  }

  public InlineResponse2001Payload user(InlineResponse200AttestationPayloadUser user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @Schema(description = "")
  public InlineResponse200AttestationPayloadUser getUser() {
    return user;
  }

  public void setUser(InlineResponse200AttestationPayloadUser user) {
    this.user = user;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2001Payload inlineResponse2001Payload = (InlineResponse2001Payload) o;
    return Objects.equals(this.authenticatorSelection, inlineResponse2001Payload.authenticatorSelection) &&
        Objects.equals(this.challenge, inlineResponse2001Payload.challenge) &&
        Objects.equals(this.excludeCredentials, inlineResponse2001Payload.excludeCredentials) &&
        Objects.equals(this.pubKeyCredParams, inlineResponse2001Payload.pubKeyCredParams) &&
        Objects.equals(this.rp, inlineResponse2001Payload.rp) &&
        Objects.equals(this.sessionId, inlineResponse2001Payload.sessionId) &&
        Objects.equals(this.uid, inlineResponse2001Payload.uid) &&
        Objects.equals(this.user, inlineResponse2001Payload.user);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authenticatorSelection, challenge, excludeCredentials, pubKeyCredParams, rp, sessionId, uid, user);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2001Payload {\n");

    sb.append("    authenticatorSelection: ").append(toIndentedString(authenticatorSelection)).append("\n");
    sb.append("    challenge: ").append(toIndentedString(challenge)).append("\n");
    sb.append("    excludeCredentials: ").append(toIndentedString(excludeCredentials)).append("\n");
    sb.append("    pubKeyCredParams: ").append(toIndentedString(pubKeyCredParams)).append("\n");
    sb.append("    rp: ").append(toIndentedString(rp)).append("\n");
    sb.append("    sessionId: ").append(toIndentedString(sessionId)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
