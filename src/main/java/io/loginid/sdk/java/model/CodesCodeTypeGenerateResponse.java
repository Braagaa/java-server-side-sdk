/*
 * LoginID Service API
 * # Introduction  <span class=\"subtext\"> Welcome to the LoginID API docs. This documentation will help understand the API calls being made behind our SDKs.  These APIs can be used to manage authentication, users, and user credentials. </span>  # Authentication  <span class=\"subtext\"> There is one main form of authentication for the API: <br/>&bull; API Service Token </span> 
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.loginid.sdk.java.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

import java.util.Objects;

/**
 * InlineResponse2008
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-10T08:30:05.952Z[GMT]")
public class CodesCodeTypeGenerateResponse {
  @SerializedName("code")
  private String code = null;

  @SerializedName("expires_at")
  private OffsetDateTime expiresAt = null;

  @SerializedName("is_authorized")
  private Boolean isAuthorized = null;

  public CodesCodeTypeGenerateResponse code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @Schema(description = "")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public CodesCodeTypeGenerateResponse expiresAt(OffsetDateTime expiresAt) {
    this.expiresAt = expiresAt;
    return this;
  }

   /**
   * Get expiresAt
   * @return expiresAt
  **/
  @Schema(description = "")
  public OffsetDateTime getExpiresAt() {
    return expiresAt;
  }

  public void setExpiresAt(OffsetDateTime expiresAt) {
    this.expiresAt = expiresAt;
  }

  public CodesCodeTypeGenerateResponse isAuthorized(Boolean isAuthorized) {
    this.isAuthorized = isAuthorized;
    return this;
  }

   /**
   * Get isAuthorized
   * @return isAuthorized
  **/
  @Schema(description = "")
  public Boolean isIsAuthorized() {
    return isAuthorized;
  }

  public void setIsAuthorized(Boolean isAuthorized) {
    this.isAuthorized = isAuthorized;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CodesCodeTypeGenerateResponse codesCodeTypeGenerateResponse = (CodesCodeTypeGenerateResponse) o;
    return Objects.equals(this.code, codesCodeTypeGenerateResponse.code) &&
        Objects.equals(this.expiresAt, codesCodeTypeGenerateResponse.expiresAt) &&
        Objects.equals(this.isAuthorized, codesCodeTypeGenerateResponse.isAuthorized);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, expiresAt, isAuthorized);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2008 {\n");

    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("    isAuthorized: ").append(toIndentedString(isAuthorized)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
