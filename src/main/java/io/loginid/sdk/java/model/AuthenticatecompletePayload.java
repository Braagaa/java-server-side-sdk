/*
 * LoginID Service API
 * # Introduction  <span class=\"subtext\"> Welcome to the LoginID API docs. This documentation will help understand the API calls being made behind our SDKs.  These APIs can be used to manage authentication, users, and user credentials. </span>  # Authentication  <span class=\"subtext\"> There is one main form of authentication for the API: <br/>&bull; API Service Token </span> 
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.loginid.sdk.java.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * AuthenticatecompletePayload
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-10T08:30:05.952Z[GMT]")
public class AuthenticatecompletePayload {
  @SerializedName("challenge")
  private String challenge = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("raw_id")
  private String rawId = null;

  @SerializedName("authenticator_data")
  private String authenticatorData = null;

  @SerializedName("client_data")
  private String clientData = null;

  @SerializedName("signature")
  private String signature = null;

  public AuthenticatecompletePayload challenge(String challenge) {
    this.challenge = challenge;
    return this;
  }

   /**
   * Get challenge
   * @return challenge
  **/
  @Schema(example = "pO9V4DruYKrXClSwUn9pRIapBfFcl_l0khQd7YwqQRE", description = "")
  public String getChallenge() {
    return challenge;
  }

  public void setChallenge(String challenge) {
    this.challenge = challenge;
  }

  public AuthenticatecompletePayload id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(example = "5dEDbWqk0BAc1lKwFI057rkTHPd7zHBvlDb5pd_HlTw", description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public AuthenticatecompletePayload rawId(String rawId) {
    this.rawId = rawId;
    return this;
  }

   /**
   * Get rawId
   * @return rawId
  **/
  @Schema(example = "5dEDbWqk0BAc1lKwFI057rkTHPd7zHBvlDb5pd_HlTw", description = "")
  public String getRawId() {
    return rawId;
  }

  public void setRawId(String rawId) {
    this.rawId = rawId;
  }

  public AuthenticatecompletePayload authenticatorData(String authenticatorData) {
    this.authenticatorData = authenticatorData;
    return this;
  }

   /**
   * Get authenticatorData
   * @return authenticatorData
  **/
  @Schema(example = "b7bd9990-2c43-4dce-9286-93cccf81bc62", description = "")
  public String getAuthenticatorData() {
    return authenticatorData;
  }

  public void setAuthenticatorData(String authenticatorData) {
    this.authenticatorData = authenticatorData;
  }

  public AuthenticatecompletePayload clientData(String clientData) {
    this.clientData = clientData;
    return this;
  }

   /**
   * Get clientData
   * @return clientData
  **/
  @Schema(example = "eyJ0eXBlIjoid2ViYXV0aG4uY3JlYXRlIiwiY2hhbGxlbmdlIjoicE85VjREcnVZS3JYQ2x", description = "")
  public String getClientData() {
    return clientData;
  }

  public void setClientData(String clientData) {
    this.clientData = clientData;
  }

  public AuthenticatecompletePayload signature(String signature) {
    this.signature = signature;
    return this;
  }

   /**
   * Get signature
   * @return signature
  **/
  @Schema(example = "x2QYJ3SZVncERjV58EciojIldmblxGiIlRXYlJ3Yu4Ga0VXYiV2diojIlBXe0Jye", description = "")
  public String getSignature() {
    return signature;
  }

  public void setSignature(String signature) {
    this.signature = signature;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthenticatecompletePayload authenticatecompletePayload = (AuthenticatecompletePayload) o;
    return Objects.equals(this.challenge, authenticatecompletePayload.challenge) &&
        Objects.equals(this.id, authenticatecompletePayload.id) &&
        Objects.equals(this.rawId, authenticatecompletePayload.rawId) &&
        Objects.equals(this.authenticatorData, authenticatecompletePayload.authenticatorData) &&
        Objects.equals(this.clientData, authenticatecompletePayload.clientData) &&
        Objects.equals(this.signature, authenticatecompletePayload.signature);
  }

  @Override
  public int hashCode() {
    return Objects.hash(challenge, id, rawId, authenticatorData, clientData, signature);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthenticatecompletePayload {\n");

    sb.append("    challenge: ").append(toIndentedString(challenge)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    rawId: ").append(toIndentedString(rawId)).append("\n");
    sb.append("    authenticatorData: ").append(toIndentedString(authenticatorData)).append("\n");
    sb.append("    clientData: ").append(toIndentedString(clientData)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
